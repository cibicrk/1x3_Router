class router_base_test extends uvm_test;

	`uvm_component_utils(router_base_test);


	router_tb envh;

	env_config m_tb_cfg;

	router_wr_agent_config m_wr_agent_cfg[];
	router_rd_agent_config m_rd_agent_cfg[];

	bit has_wagent = 1;
	bit has_ragent = 1;

	int no_of_wr_agts=1;
	int no_of_rd_agts=3;


	extern function new(string name = "router_base_test" , uvm_component parent);
	extern function void build_phase(uvm_phase phase);
	extern function void config_router();
	

endclass

function void router_base_test:: config_router();

	if(has_wagent)
		begin
			m_wr_agent_cfg=new[no_of_wr_agts];
	
		foreach(m_wr_agent_cfg[i])
	
			begin
				m_wr_agent_cfg[i]=router_wr_agent_config::type_id::create($sformatf("m_wr_agent_cfg[%0d]",i));


				if(!uvm_config_db #(virtual router_if)::get(this,"","vif",m_wr_agent_cfg[i].vif))
					`uvm_fatal("VIF CONFIG","cannot get()interface vif from uvm_config_db. Have you set() it?") 
				m_wr_agent_cfg[i].is_active=UVM_ACTIVE;
				m_tb_cfg.m_wr_agent_cfg[i]=m_wr_agent_cfg[i];

			end
		end
      
	if(has_ragent)
		
      	begin
			m_rd_agent_cfg=new[no_of_rd_agts];

			foreach(m_rd_agent_cfg[i])
				begin
					m_rd_agent_cfg[i]=router_rd_agent_config::type_id::create($sformatf("m_rd_agent_cfg[%0d]",i));
	
					if(!uvm_config_db #(virtual router_if)::get(this,"",$sformatf("vif%0d",i),m_rd_agent_cfg[i].vif))
						`uvm_fatal("VIF CONFIG","cannot get()interface vif from uvm_config_db. Have you set() it?") 
					m_rd_agent_cfg[i].is_active=UVM_ACTIVE;
					m_tb_cfg.m_rd_agent_cfg[i]=m_rd_agent_cfg[i];
				end

		end 
			m_tb_cfg.no_of_wr_agts=no_of_wr_agts;
			m_tb_cfg.no_of_rd_agts=no_of_rd_agts;
			m_tb_cfg.has_wagent=has_wagent;
			m_tb_cfg.has_ragent=has_ragent;
		
endfunction

function void router_base_test::build_phase(uvm_phase phase);

	m_tb_cfg=env_config::type_id::create("m_tb_cfg");
		
	if(has_wagent)
          m_tb_cfg.m_wr_agent_cfg=new[no_of_wr_agts];
		
	if(has_ragent)
		m_tb_cfg.m_rd_agent_cfg=new[no_of_rd_agts];

	config_router;

	uvm_config_db#(env_config)::set(this,"*","set_from_test",m_tb_cfg);

	envh=router_tb::type_id::create("envh",this);	

	super.build_phase(phase);
  
endfunction

function router_base_test::new(string name = "router_base_test" , uvm_component parent);
  
 	 super.new(name,parent);
  
endfunction



class router_test1 extends router_base_test;

	`uvm_component_utils(router_test1);
     router_wr_vseq1 vseq;
        
     extern function new(string name="router_test1",uvm_component parent);
     extern function void build_phase(uvm_phase phase);
     extern task run_phase(uvm_phase phase);
          
endclass
          
function router_test1::new(string name="router_test1",uvm_component parent);
            
 	 super.new(name,parent);
            
endfunction
          
function void router_test1::build_phase(uvm_phase phase);
            
     super.build_phase(phase);
            
endfunction
          
task router_test1::run_phase(uvm_phase phase);
            
	phase.raise_objection(this);

	vseq=router_wr_vseq1::type_id::create("vseq");

	vseq.start(envh.v_sequencer);
 
	phase.drop_objection(this);  
            
endtask
          

class router_test2 extends router_base_test;

	`uvm_component_utils(router_test2);
     router_wr_vseq2 vseq;
        
     extern function new(string name="router_test2",uvm_component parent);
     extern function void build_phase(uvm_phase phase);
     extern task run_phase(uvm_phase phase);
          
endclass
          
function router_test2::new(string name="router_test2",uvm_component parent);
            
    super.new(name,parent);
            
endfunction
          
function void router_test2::build_phase(uvm_phase phase);
            
     super.build_phase(phase);
            
endfunction
          
task router_test2::run_phase(uvm_phase phase);
            
	phase.raise_objection(this);

	vseq=router_wr_vseq2::type_id::create("vseq");

	vseq.start(envh.v_sequencer);
 
	phase.drop_objection(this);  
            
endtask
