class router_scoreboard extends uvm_scoreboard;
	`uvm_component_utils(router_scoreboard)

    uvm_tlm_analysis_fifo #(write_xtn) fifo_wr[];
    uvm_tlm_analysis_fifo #(read_xtn) fifo_rd[];
   
	static int no_of_write_packet;
	static int no_of_read_packet;
	static int no_of_data_verification_with_success;
    static int no_of_data_verification_with_failure;
    static int no_of_data_verification;
   	static int no_of_packet_verification_with_success;
    static int no_of_pkt_verification_with_faluare;
	write_xtn wr_data;
	read_xtn rd_data;

  	
	extern function new(string name,uvm_component parent);
	extern task run_phase(uvm_phase phase);
	extern function void check_phase1();
	


endclass





function router_scoreboard::new(string name,uvm_component parent);

	super.new(name,parent);
 
	fifo_wr=new[1];
  	fifo_rd=new[3];
  
  	foreach(fifo_wr[i])
    	fifo_wr[i]=new($sformatf("fifo_wr[%0d]",i),this);
  
    
  	foreach(fifo_rd[i])
    	fifo_rd[i]=new($sformatf("fifo_rd[%0d]",i),this);

endfunction






task router_scoreboard::run_phase(uvm_phase phase);

	forever
		begin
			fork
		  		begin
            
              		fifo_wr[0].get(wr_data);
            		$display("write_data_receive in sb at time %0t",$time);
             		no_of_write_packet++;
		 		end


				begin
					fork
             			begin
              				fifo_rd[0].get(rd_data);
                			$display("read_data_0_receive in sb at time %0t",$time);
                			no_of_read_packet++;
              			end
              
              			begin
              				fifo_rd[1].get(rd_data);
                			$display("read_data_1_receive in sb at time %0t",$time);
                			no_of_read_packet++;
             		    end

              			begin
             				 fifo_rd[2].get(rd_data);
               				 $display("read_data_2_receive in sb at time %0t",$time);
               				 no_of_read_packet++;
           			    end
                
         			join_any
           			disable fork;
        		end
				
			join
        
        $display("checking&&&&&&&&&*****sb got the wr and rd data at time %0d loading......",$time);
		check_phase1();

		end
endtask


function void router_scoreboard::check_phase1();

	`uvm_info("scoreboard",$sformatf("wr_moniter at time %0t",$time),UVM_LOW)
	wr_data.print;

	`uvm_info("scoreboard",$sformatf("rd_moniter at time %0t",$time),UVM_LOW)

	rd_data.print;


begin
  
	if(!rd_data.header == wr_data.header)
		begin
			`uvm_info("ROUTER_SCOREBOARD","header mismatch",UVM_LOW)
          	no_of_data_verification_with_failure++;
          	no_of_data_verification++;
        end
	
  	else
      	begin
			`uvm_info("router_scoreboard","header match",UVM_LOW)
    	  	no_of_data_verification_with_success++;
          	no_of_data_verification++;
        end


foreach(rd_data.payload[i])
	begin
		
		if(!rd_data.payload[i] == wr_data.payload[i])
			begin
              
               `uvm_info("router_scoreboard",$sformatf("payload mismatch[%0d]",i),UVM_LOW)
               no_of_data_verification_with_failure++;
               no_of_data_verification++;
              
            end
		else
           	begin
				`uvm_info("router_scoreboard",$sformatf("payload match[%0d]",i),UVM_LOW)
                no_of_data_verification_with_success++;
                no_of_data_verification++;
            end
	end



	if(!rd_data.parity == wr_data.parity)
      	begin
     	 	`uvm_info("router_scoreboard","parity mismatch",UVM_LOW)
           	no_of_data_verification_with_failure++;
            no_of_data_verification++;
        end
  
	else
		begin
          	`uvm_info("router_scoreboard","parity match",UVM_LOW)
			no_of_data_verification_with_success++;
          	no_of_data_verification++;
        end
  
	if(no_of_data_verification_with_success==no_of_data_verification)
   		 no_of_packet_verification_with_success++;
  	else
    	no_of_pkt_verification_with_faluare++;
  
  
  
  $display("   ***************************** SCORE BOARD RESULT FOR PACKET: %0d *************************************",no_of_read_packet);
  $display("   *                                                                                                  *");
  $display("   *               TOTAL NO OF DATA VERIFIED WITH SUCCESS: %1d                                         *",no_of_data_verification_with_success  );
  $display("   *               TOTAL NO OF DATA VERIFIED WITH FAILURE: %0d                                          *",no_of_data_verification_with_failure);
  $display("   *               NO OF PACKET RECEIVED FORM WR_MONITOR: %0d                                           *",no_of_write_packet);
  $display("   *               NO OF PACKET RECEIVED FROM RD_MONITOR: %0d                                           *",no_of_read_packet);
  $display("   *               NO OF PACKET VERIFIED WITH SUCCESS : %0d                                             *",no_of_packet_verification_with_success);
  $display("   *               NO OF PACKET VERIFIED WITH FAILURE: %0d                                              *",no_of_pkt_verification_with_faluare);
  $display("   *                                                                                                  *");
  $display("   ********************************##############################**************************************\n \n");



	end

endfunction
